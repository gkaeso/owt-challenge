openapi: 3.0.1
info:
  title: Contact Api Documentation
  description: Contact Api Documentation
  termsOfService: urn:tos
  contact: { }
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: "2.0"
servers:
  - url: http://localhost:8080/
tags:
  - name: contacts
  - name: skills

paths:
  /contacts:
    post:
      tags:
        - contacts
      summary: add a contact
      operationId: createContact
      requestBody:
        required: true
        description: the contact to create
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ContactDto'
      responses:
        200:
          description: the created contact id
          content:
            application/json:
              schema:
                type: string
                format: uuid
  #      x-codegen-request-body-name: contact
  /contacts/{id}:
    get:
      tags:
        - contacts
      summary: read a contact
      operationId: getContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: the requested contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDto'
    put:
      tags:
        - contacts
      summary: update a contact
      operationId: updateContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactDto'
      responses:
        204:
          description: contact has been updated
          content: { }
    #      x-codegen-request-body-name: contact
    delete:
      tags:
        - contacts
      summary: delete contact
      operationId: deleteContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: contact has been deleted
          content: { }

  /skills:
    post:
      tags:
        - skills
      summary: add a skill
      operationId: createSkill
      requestBody:
        required: true
        description: create a skill
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SkillDto'
      responses:
        200:
          description: return created skill id
          content:
            application/json:
              schema:
                type: string
                format: uuid
  #      x-codegen-request-body-name: skill
  /skills/{id}:
    get:
      tags:
        - skills
      summary: read a skill
      operationId: getSkill
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: return requested skill
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
    put:
      tags:
        - skills
      summary: update a skill
      operationId: updateSkill
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillDto'
      responses:
        200:
          description: skill has been updated
          content: { }
    #      x-codegen-request-body-name: skill
    delete:
      tags:
        - skills
      summary: delete skill
      operationId: deleteSkill
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: skill has been deleted
          content: { }

components:
  schemas:
    # Contact
    AddressDto:
      type: object
      required:
        - street
        - postCode
        - city
      properties:
        street:
          type: string
        postCode:
          type: string
        city:
          type: string
    ContactDto:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          $ref: '#/components/schemas/AddressDto'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillDto'
    # Skill
    LevelDto:
      type: string
      enum:
        - JUNIOR
        - SENIOR
        - EXPERT
    SkillDto:
      type: object
      required:
        - name
        - level
      properties:
        name:
          type: string
        level:
          $ref: '#/components/schemas/LevelDto'
    # Error
    ErrorDto:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        type:
          type: string
        message:
          type: string

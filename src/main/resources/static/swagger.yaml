openapi: 3.0.1
info:
  title: Contact Api Documentation
  description: Contact Api Documentation
  termsOfService: urn:tos
  contact: { }
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: "2.0"
servers:
  - url: http://localhost:8080/
tags:
  - name: contacts
  - name: skills

paths:
  /contacts:
    post:
      tags:
        - contacts
      summary: add a contact
      operationId: createContact
      requestBody:
        required: true
        description: contactDto
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateContactDto'
      responses:
        200:
          description: return created contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedContactDto'
      x-codegen-request-body-name: contactDto
  /contacts/{id}:
    get:
      tags:
        - contacts
      summary: read a contact
      operationId: getContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: return updated contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadContactDto'
    put:
      tags:
        - contacts
      summary: update a contact
      operationId: updateContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactDto'
      responses:
        200:
          description: return updated contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedContactDto'
      x-codegen-request-body-name: contactDto
    delete:
      tags:
        - contacts
      summary: delete contact
      operationId: deleteContact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: contact has been delete
          content: { }

  /skills:
    post:
      tags:
        - skills
      summary: add a skill
      operationId: createSkill
      requestBody:
        required: true
        description: create a skill
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateSkillDto'
      responses:
        200:
          description: return created skill
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedSkillDto'
      x-codegen-request-body-name: skillDto
  /skills/{id}:
    get:
      tags:
        - skills
      summary: read a skill
      operationId: getSkill
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: return updated skill
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadSkillDto'
    put:
      tags:
        - skills
      summary: update a skill
      operationId: updateSkill
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSkillDto'
      responses:
        200:
          description: return updated skill
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedSkillDto'
      x-codegen-request-body-name: skillDto
    delete:
      tags:
        - skills
      summary: delete skill
      operationId: deleteSkill
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: skill is deleted
          content: { }

components:
  schemas:
    # Contact
    AddressDto:
      type: object
      properties:
        street:
          type: string
        postCode:
          type: string
        city:
          type: string
    ContactDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          $ref: '#/components/schemas/AddressDto'
    CreateContactDto:
      allOf:
        - type: object
          required:
            - firstName
            - lastName
            - email
            - phone
            - address
        - $ref: '#/components/schemas/ContactDto'
    CreatedContactDto:
      allOf:
        - type: object
          required:
            - id
            - firstName
            - lastName
            - email
            - phone
            - address
        - $ref: '#/components/schemas/ContactDto'
    ReadContactDto:
      allOf:
        - type: object
          required:
            - id
            - firstName
            - lastName
            - email
            - phone
            - address
        - $ref: '#/components/schemas/ContactDto'
    UpdateContactDto:
      allOf:
        - type: object
          required:
            - firstName
            - lastName
            - email
            - phone
            - address
        - $ref: '#/components/schemas/ContactDto'
    UpdatedContactDto:
      allOf:
        - type: object
          required:
            - id
            - firstName
            - lastName
            - email
            - phone
            - address
        - $ref: '#/components/schemas/ContactDto'
    # Skill
    LevelDto:
      type: string
      enum:
        - JUNIOR
        - SENIOR
        - EXPERT
    SkillDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        level:
          $ref: '#/components/schemas/LevelDto'
    CreateSkillDto:
      allOf:
        - type: object
          required:
            - name
            - level
        - $ref: '#/components/schemas/SkillDto'
    CreatedSkillDto:
      allOf:
        - type: object
          required:
            - id
            - name
            - level
        - $ref: '#/components/schemas/SkillDto'
    ReadSkillDto:
      allOf:
        - type: object
          required:
            - id
            - name
        - $ref: '#/components/schemas/SkillDto'
    UpdateSkillDto:
      allOf:
        - type: object
          required:
            - name
            - level
        - $ref: '#/components/schemas/SkillDto'
    UpdatedSkillDto:
      allOf:
        - type: object
          required:
            - id
            - name
            - level
        - $ref: '#/components/schemas/SkillDto'
    # Error
    ErrorDto:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        type:
          type: string
        message:
          type: string
